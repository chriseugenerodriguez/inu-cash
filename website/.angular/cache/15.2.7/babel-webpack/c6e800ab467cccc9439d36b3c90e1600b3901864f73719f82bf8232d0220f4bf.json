{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// ROUTING\nimport { AppRoutingModule } from './app-routing.module';\n// COMPONENTS\nimport { AppComponent } from './app.component';\n// MODULES\nimport { HeaderModule, FooterModule } from './shared/components';\n// SERVICES\nimport { EtherscanService } from './shared/services';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [EtherscanService],\n    imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule, HeaderModule, FooterModule, ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}