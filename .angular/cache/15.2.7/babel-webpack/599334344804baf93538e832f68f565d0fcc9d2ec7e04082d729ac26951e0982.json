{"ast":null,"code":"// RXJS\nimport { throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\n// EVN\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EtherscanService = /*#__PURE__*/(() => {\n  class EtherscanService {\n    constructor(http) {\n      this.http = http;\n      // COINMARKETCAP\n      this.key = 'ff6885d4-2006-4483-8313-a1463935d350';\n      this.api = '/api/c/';\n      this.address = '0xdac17f958d2ee523a2206206994597c13d831ec7';\n      this.options = {\n        method: 'GET',\n        qs: {\n          symbol: 'ETH'\n        },\n        headers: {\n          'X-CMC_PRO_API_KEY': `${this.key}`\n        },\n        json: true,\n        gzip: true\n      };\n    }\n    getContract() {\n      const route = environment.production ? `${this.api}` : `${this.api}cryptocurrency/quotes/latest?id=1`;\n      return this.http.get(route, this.options).pipe(map(res => res.data[1]), catchError(res => this._errorHandler(res)));\n    }\n    _errorHandler(res) {\n      const statusCode = res.status;\n      const error = {\n        statusCode,\n        error: res['message']\n      };\n      if (!environment.production) {\n        console.error(error);\n      }\n      return throwError(error || 'Server Error');\n    }\n  }\n  EtherscanService.ɵfac = function EtherscanService_Factory(t) {\n    return new (t || EtherscanService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  EtherscanService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EtherscanService,\n    factory: EtherscanService.ɵfac\n  });\n  return EtherscanService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}